apiVersion: apps/v1
kind: Deployment
metadata:
  name:  my-http-server
  namespace: playground
  labels:
    app:  my-http-server
spec:
  selector:
    matchLabels:
      app: my-http-server
  replicas: 3
  strategy:
    # type: Recreate 
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app:  my-http-server
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - my-http-server
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name:  my-http-server
        image:  nginx
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 100m
            memory: 100Mi
        livenessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 3
          periodSeconds: 10
        ports:
        - containerPort:  80
          name:  my-http-server
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: my-http-server
  namespace: playground
spec:
  selector:
    app: my-http-server
  type: ClusterIP
  sessionAffinity: None
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800
  ports:
  - name: my-http-server
    protocol: TCP
    port: 80
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: my-http-server
spec:
  minAvailable: 2
  #maxUnavailable: 1
  selector:
    matchLabels:
      app: my-http-server